name: Deploy to Dev
on:
  workflow_dispatch:

jobs:
  refresh-and-preview:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      packages: write
    environment: dev
    outputs:
      has-changes: ${{ steps.check-changes.outputs.has-changes }}
      preview-output: ${{ steps.preview.outputs.stdout }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Pulumi
        uses: pulumi/actions@v5

      - name: Install gcloud
        uses: 'google-github-actions/setup-gcloud@v1'
        with:
          install_components: 'gke-gcloud-auth-plugin'

      - name: gcloud authentication
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ vars.GCP_WORKLOAD_IDENTITY_PROVIDER_DEV }}
          service_account: ${{ vars.GCP_SERVICE_ACCOUNT_DEV }}

      - name: NPM install
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm install

      - name: Pulumi Refresh
        uses: pulumi/actions@v5
        with:
          command: refresh
          stack-name: 'clients-dev'
          work-dir: 'client'
          comment-on-pr: false
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          USE_GKE_GCLOUD_AUTH_PLUGIN: True

      - name: Pulumi Preview
        uses: pulumi/actions@v5
        id: preview
        with:
          command: preview
          stack-name: 'clients-dev'
          work-dir: 'client'
          comment-on-pr: false
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          USE_GKE_GCLOUD_AUTH_PLUGIN: True

      - name: Check for changes
        id: check-changes
        run: |
          preview_output="${{ steps.preview.outputs.stdout }}"
          echo "Preview output:"
          echo "$preview_output"
          
          # More robust change detection
          if echo "$preview_output" | grep -E "(create|update|delete|replace)" | grep -v "no changes"; then
            echo "has-changes=true" >> $GITHUB_OUTPUT
            echo "✅ Changes detected in preview"
          else
            echo "has-changes=false" >> $GITHUB_OUTPUT
            echo "✅ No changes detected in preview"
          fi

      - name: Display Preview Summary
        run: |
          echo "## 🔍 Pulumi Preview Results" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.preview.outputs.stdout }}" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ steps.check-changes.outputs.has-changes }}" == "true" ]; then
            echo "⚠️ **Changes detected - Manual approval required for deployment**" >> $GITHUB_STEP_SUMMARY
          else
            echo "✅ **No changes detected - Infrastructure is up to date**" >> $GITHUB_STEP_SUMMARY
          fi

  wait-for-approval:
    needs: refresh-and-preview
    if: needs.refresh-and-preview.outputs.has-changes == 'true'
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Request Manual Approval
        run: |
          echo "🚨 Manual approval required!"
          echo "Changes have been detected in the Pulumi preview."
          echo "Please review the changes above and approve this deployment."
          echo ""
          echo "Preview output:"
          echo "${{ needs.refresh-and-preview.outputs.preview-output }}"

  deploy:
    needs: [refresh-and-preview, wait-for-approval]
    # Only run if no changes OR if changes exist and approval was given
    if: |
      always() && 
      needs.refresh-and-preview.result == 'success' && 
      (
        needs.refresh-and-preview.outputs.has-changes == 'false' || 
        (needs.refresh-and-preview.outputs.has-changes == 'true' && needs.wait-for-approval.result == 'success')
      )
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      packages: write
    environment: dev
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Pulumi
        uses: pulumi/actions@v5

      - name: Install gcloud
        uses: 'google-github-actions/setup-gcloud@v1'
        with:
          install_components: 'gke-gcloud-auth-plugin'

      - name: gcloud authentication
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ vars.GCP_WORKLOAD_IDENTITY_PROVIDER_DEV }}
          service_account: ${{ vars.GCP_SERVICE_ACCOUNT_DEV }}

      - name: NPM install
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm install

      - name: Deploy Platform (if changes detected)
        if: needs.refresh-and-preview.outputs.has-changes == 'true'
        uses: pulumi/actions@v5
        with:
          command: up
          stack-name: 'clients-dev'
          work-dir: 'client'
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          USE_GKE_GCLOUD_AUTH_PLUGIN: True

      - name: Deployment Summary
        run: |
          echo "## 🚀 Deployment Summary" >> $GITHUB_STEP_SUMMARY
          if [ "${{ needs.refresh-and-preview.outputs.has-changes }}" == "true" ]; then
            echo "✅ **Deployment completed successfully**" >> $GITHUB_STEP_SUMMARY
            echo "Changes have been applied to the dev environment." >> $GITHUB_STEP_SUMMARY
          else
            echo "✅ **No deployment needed**" >> $GITHUB_STEP_SUMMARY
            echo "Infrastructure was already up to date." >> $GITHUB_STEP_SUMMARY
          fi