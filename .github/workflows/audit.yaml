name: Audit Stack Approval
on:
  workflow_dispatch:

jobs:
  clients-refresh-preview:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      packages: write
    outputs:
      has_changes: ${{ steps.check_changes.outputs.has_changes }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Pulumi
        uses: pulumi/actions@v5

      - name: Install gcloud
        uses: google-github-actions/setup-gcloud@v1
        with:
          install_components: 'gke-gcloud-auth-plugin'

      - name: gcloud authentication
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ vars.GCP_WORKLOAD_IDENTITY_PROVIDER_DEV }}
          service_account: ${{ vars.GCP_SERVICE_ACCOUNT_DEV }}

      - name: NPM install
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm install

      - name: Pulumi Preview
        id: preview
        uses: pulumi/actions@v5
        with:
          command: preview
          refresh: 'false'
          stack-name: clients-dev
          work-dir: client
          diff: true
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          USE_GKE_GCLOUD_AUTH_PLUGIN: True

#      - name: Check Preview Output
#        id: check_changes
#        run: |
#          PREVIEW_OUTPUT="${{ steps.preview.outputs.output }}"
#          if echo "$PREVIEW_OUTPUT" | grep -E "(\+ [0-9]+ to create|\- [0-9]+ to delete|~ [0-9]+ to update|[0-9]+ changes)" > /dev/null; then
#            echo "has_changes=true" >> $GITHUB_OUTPUT
#          else
#            echo "has_changes=false" >> $GITHUB_OUTPUT
#          fi

      - name: Check Changes
        id: check_changes
        run: |
          PREVIEW_OUTPUT="${{ steps.preview.outputs.output }}"
          
          if echo "$PREVIEW_OUTPUT" | grep -E "to (create|delete|update|replace)" > /dev/null; then
            SUMMARY=$(echo "$PREVIEW_OUTPUT" | grep -E "[0-9]+ to (create|delete|update|replace)" | tr '\n' ', ' | sed 's/, $//')
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "changes_summary=$SUMMARY" >> $GITHUB_OUTPUT
            echo "::notice title=Pulumi Changes::$SUMMARY"
          else
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "::notice title=Pulumi Preview::No infrastructure changes detected"
          fi

      - name: Save Preview Output
        if: steps.check_changes.outputs.has_changes == 'true'
        run: |
          mkdir -p preview-outputs
          echo "Timestamp: $(date)" > preview-outputs/clients-preview.txt
          echo "Commit: ${{ github.sha }}" >> preview-outputs/clients-preview.txt
          echo "Actor: ${{ github.actor }}" >> preview-outputs/clients-preview.txt
          echo "---" >> preview-outputs/clients-preview.txt
          echo "${{ steps.preview.outputs.output }}" >> preview-outputs/clients-preview.txt

      - name: Upload Preview Artifact
        if: steps.check_changes.outputs.has_changes == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: clients-preview-output
          path: preview-outputs/
          retention-days: 30

  clients-deploy:
    runs-on: ubuntu-latest
    needs: clients-refresh-preview
    if: needs.clients-refresh-preview.outputs.has_changes == 'true'
    permissions:
      contents: read
      id-token: write
      packages: write
    environment:
      name: dev
      url: ${{ steps.deploy.outputs.url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Pulumi
        uses: pulumi/actions@v5

      - name: Install gcloud
        uses: google-github-actions/setup-gcloud@v1
        with:
          install_components: 'gke-gcloud-auth-plugin'

      - name: gcloud authentication
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ vars.GCP_WORKLOAD_IDENTITY_PROVIDER_DEV }}
          service_account: ${{ vars.GCP_SERVICE_ACCOUNT_DEV }}

      - name: NPM install
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm install

      - name: Pulumi Up
        id: deploy
        uses: pulumi/actions@v5
        with:
          command: up
          refresh: 'false'
          stack-name: clients-dev
          work-dir: client
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          USE_GKE_GCLOUD_AUTH_PLUGIN: True

  foundation-refresh-preview:
    runs-on: ubuntu-latest
    needs: [clients-refresh-preview, clients-deploy]
    if: always() && !cancelled() && !contains(needs.*.result, 'failure')
    permissions:
      contents: read
      id-token: write
      packages: write
    outputs:
      has_changes: ${{ steps.check_changes.outputs.has_changes }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Pulumi
        uses: pulumi/actions@v5

      - name: Install gcloud
        uses: google-github-actions/setup-gcloud@v1
        with:
          install_components: 'gke-gcloud-auth-plugin'

      - name: gcloud authentication
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ vars.GCP_WORKLOAD_IDENTITY_PROVIDER_DEV }}
          service_account: ${{ vars.GCP_SERVICE_ACCOUNT_DEV }}

      - name: NPM install
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm install

      - name: Pulumi Preview
        id: preview
        uses: pulumi/actions@v5
        with:
          command: preview
          refresh: 'false'
          stack-name: foundation-dev
          work-dir: foundation
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          USE_GKE_GCLOUD_AUTH_PLUGIN: True

      - name: Check Preview Output
        id: check_changes
        run: |
          PREVIEW_OUTPUT="${{ steps.preview.outputs.output }}"
          if echo "$PREVIEW_OUTPUT" | grep -E "(\+ [0-9]+ to create|\- [0-9]+ to delete|~ [0-9]+ to update|[0-9]+ changes)" > /dev/null; then
            echo "has_changes=true" >> $GITHUB_OUTPUT
          else
            echo "has_changes=false" >> $GITHUB_OUTPUT
          fi

  foundation-deploy:
    runs-on: ubuntu-latest
    needs: [clients-refresh-preview, clients-deploy, foundation-refresh-preview]
    if: always() && !cancelled() && !contains(needs.*.result, 'failure') && needs.foundation-refresh-preview.outputs.has_changes == 'true'
    permissions:
      contents: read
      id-token: write
      packages: write
    environment:
      name: dev
      url: ${{ steps.deploy.outputs.url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Pulumi
        uses: pulumi/actions@v5

      - name: Install gcloud
        uses: google-github-actions/setup-gcloud@v1
        with:
          install_components: 'gke-gcloud-auth-plugin'

      - name: gcloud authentication
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ vars.GCP_WORKLOAD_IDENTITY_PROVIDER_DEV }}
          service_account: ${{ vars.GCP_SERVICE_ACCOUNT_DEV }}

      - name: NPM install
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm install

      - name: Pulumi Up
        id: deploy
        uses: pulumi/actions@v5
        with:
          command: up
          refresh: 'false'
          stack-name: foundation-dev
          work-dir: foundation
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          USE_GKE_GCLOUD_AUTH_PLUGIN: True

  platform-refresh-preview:
    runs-on: ubuntu-latest
    needs: [clients-refresh-preview, clients-deploy, foundation-refresh-preview, foundation-deploy]
    if: always() && !cancelled() && !contains(needs.*.result, 'failure')
    permissions:
      contents: read
      id-token: write
      packages: write
    outputs:
      has_changes: ${{ steps.check_changes.outputs.has_changes }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Pulumi
        uses: pulumi/actions@v5

      - name: Install gcloud
        uses: google-github-actions/setup-gcloud@v1
        with:
          install_components: 'gke-gcloud-auth-plugin'

      - name: gcloud authentication
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ vars.GCP_WORKLOAD_IDENTITY_PROVIDER_DEV }}
          service_account: ${{ vars.GCP_SERVICE_ACCOUNT_DEV }}

      - name: NPM install
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm install

      - name: Pulumi Preview
        id: preview
        uses: pulumi/actions@v5
        with:
          command: preview
          refresh: 'false'
          stack-name: platform-dev
          work-dir: platform
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          USE_GKE_GCLOUD_AUTH_PLUGIN: True

      - name: Check Preview Output
        id: check_changes
        run: |
          PREVIEW_OUTPUT="${{ steps.preview.outputs.output }}"
          if echo "$PREVIEW_OUTPUT" | grep -E "(\+ [0-9]+ to create|\- [0-9]+ to delete|~ [0-9]+ to update|[0-9]+ changes)" > /dev/null; then
            echo "has_changes=true" >> $GITHUB_OUTPUT
          else
            echo "has_changes=false" >> $GITHUB_OUTPUT
          fi

  platform-deploy:
    runs-on: ubuntu-latest
    needs: [clients-refresh-preview, clients-deploy, foundation-refresh-preview, foundation-deploy, platform-refresh-preview]
    if: always() && !cancelled() && !contains(needs.*.result, 'failure') && needs.platform-refresh-preview.outputs.has_changes == 'true'
    permissions:
      contents: read
      id-token: write
      packages: write
    environment:
      name: dev
      url: ${{ steps.deploy.outputs.url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Pulumi
        uses: pulumi/actions@v5

      - name: Install gcloud
        uses: google-github-actions/setup-gcloud@v1
        with:
          install_components: 'gke-gcloud-auth-plugin'

      - name: gcloud authentication
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ vars.GCP_WORKLOAD_IDENTITY_PROVIDER_DEV }}
          service_account: ${{ vars.GCP_SERVICE_ACCOUNT_DEV }}

      - name: NPM install
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm install

      - name: Pulumi Up
        id: deploy
        uses: pulumi/actions@v5
        with:
          command: up
          refresh: 'false'
          stack-name: platform-dev
          work-dir: platform
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          USE_GKE_GCLOUD_AUTH_PLUGIN: True